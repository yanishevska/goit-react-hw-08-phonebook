{"version":3,"sources":["components/AppBar/AppBar.module.css","components/UserMenu/UserMenu.module.css","redux/contacts/contacts-actions.js","components/Container/Container.module.css","redux/auth/auth-operations.js","redux/auth/auth-slice.js","redux/auth/auth-selectors.js","components/AppBar/Navigation.js","components/AppBar/AuthNav.js","components/UserMenu/default-avatar.png","components/UserMenu/UserMenu.js","components/AppBar/AppBar.js","routes/PrivateRoute.js","routes/PublicRoute.js","components/Loader/Loader.js","components/Container/ContainerHeader.js","App.js","components/Notification/Notification.js","redux/contacts/contacts-reducer.js","redux/store.js","index.js"],"names":["module","exports","actions","getContactsRequest","createAction","getContactsSuccess","getContactsError","addContactsRequest","addContactsSuccess","addContactsError","deleteContactsRequest","deleteContactsSuccess","deleteContactsError","changeContact","axios","defaults","baseURL","token","headers","common","Authorization","register","createAsyncThunk","credentials","a","rejectWithValue","post","data","statusText","logIn","logOut","_","fetchCurrentUser","thunkAPI","state","getState","persistedContacts","auth","console","log","get","operations","authSlice","createSlice","name","initialState","user","email","isLoggedIn","isFetchingCurrentUser","error","isLoading","isNotification","extraReducers","authOperations","fulfilled","action","payload","status","message","rejected","pending","authSelectors","getIsLoggedIn","getUserName","getIsFetchingCurrent","getIsNotification","Navigation","useSelector","to","className","s","link","style","color","isActive","AuthNav","container","UserMenu","dispatch","useDispatch","avatar","defaultAvatar","src","alt","width","btnList","type","onClick","btn12","AppBar","PrivateRoute","children","redirectTo","PublicRoute","restricted","Loader","size","role","ContainerHeader","title","HomePage","lazy","RegisterPage","LoginPage","ContactsPage","App","notification","useEffect","toast","NotificationError","success","NotificationSuccess","fallback","path","element","items","createReducer","filter","contact","id","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","persistReducer","authReducer","contacts","rootReducer","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.1c5f5279.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"AppBar_container__2HNez\",\"link\":\"AppBar_link__1gQxv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"UserMenu_container__2ND_x\",\"avatar\":\"UserMenu_avatar__3NKeu\",\"name\":\"UserMenu_name__340Nb\",\"frame\":\"UserMenu_frame__tx1Wc\",\"btnList\":\"UserMenu_btnList__3jvxd\",\"btn12\":\"UserMenu_btn12__3HI5c\"};","import { createAction } from '@reduxjs/toolkit';\r\n\r\nconst getContactsRequest = createAction('contacts/getContactsRequest');\r\nconst getContactsSuccess = createAction('contacts/getContactsSuccess');\r\nconst getContactsError = createAction('contacts/getContactsError');\r\n\r\n\r\nconst addContactsRequest = createAction('contacts/addContactsRequest');\r\nconst addContactsSuccess = createAction('contacts/addContactsSuccess');\r\nconst addContactsError = createAction('contacts/addContactsError');\r\n\r\nconst deleteContactsRequest = createAction('contacts/ deleteContactsRequest');\r\nconst deleteContactsSuccess = createAction('contacts/ deleteContactsSuccess');\r\nconst deleteContactsError = createAction('contacts/ deleteContactsError');\r\n\r\n\r\nconst changeContact = createAction('contacts/changeContact');\r\n\r\nconst actions = {\r\n    getContactsRequest,\r\n    getContactsSuccess,\r\n    getContactsError,\r\n    addContactsRequest,\r\n    addContactsSuccess,\r\n    addContactsError,\r\n    deleteContactsRequest,\r\n    deleteContactsSuccess,\r\n    deleteContactsError,\r\n    changeContact,\r\n};\r\n\r\nexport default actions;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__2wnMP\",\"title\":\"Container_title__2yxEZ\",\"ContainerHeader\":\"Container_ContainerHeader__1LPbr Container_container__2wnMP\"};","import axios from \"axios\";\r\nimport { createAsyncThunk } from \"@reduxjs/toolkit\";\r\n\r\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com';\r\n\r\nconst token = {\r\n    set(token) {\r\n        axios.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n    },\r\n    unset() {\r\n        axios.defaults.headers.common.Authorization = '';\r\n    },\r\n};\r\n\r\nconst register = createAsyncThunk(\r\n    'auth/register',\r\n    async (credentials, { rejectWithValue }) => {\r\n        try {\r\n            const { data } = await axios.post('/users/signup', credentials);\r\n            token.set(data.token);\r\n            return data;\r\n        } catch (error) {\r\n            rejectWithValue(error.data.statusText);\r\n        \r\n        }\r\n    });\r\n\r\nconst logIn = createAsyncThunk(\r\n    'auth/login',\r\n    async (credentials, { rejectWithValue }) => {\r\n        try {\r\n            const { data } = await axios.post('/users/login', credentials);\r\n            token.set(data.token);\r\n            return data;\r\n        } catch (error) {\r\n            rejectWithValue(error.data.statusText);\r\n        }\r\n    });\r\n\r\n\r\nconst logOut = createAsyncThunk(\r\n    'auth/logout',\r\n    async (_, { rejectWithValue }) => {\r\n        try {\r\n            await axios.post('/users/logout');\r\n            token.unset();\r\n        } catch (error) {\r\n            rejectWithValue(error.data.statusText);\r\n        }\r\n    });\r\n\r\nconst fetchCurrentUser = createAsyncThunk(\r\n    'auth/refresh',\r\n    async (_, thunkAPI) => {\r\n        const state = thunkAPI.getState();\r\n        const persistedContacts = state.auth.token;\r\n        \r\n        if (persistedContacts === null) {\r\n            console.log('we have not token, back');\r\n            return thunkAPI.rejectWithValue();\r\n        }\r\n        token.set(persistedContacts);\r\n  \r\n        try {\r\n            const { data } = await axios.get('/users/current');\r\n            return data;\r\n        } catch (error) {\r\n            thunkAPI.rejectWithValue(error.data.statusText);\r\n        }\r\n    });\r\n\r\n\r\nconst operations = {\r\n    register,\r\n    logIn,\r\n    logOut,\r\n    fetchCurrentUser,\r\n};\r\nexport default operations;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\nimport authOperations from \"./auth-operations\";\r\n\r\n\r\nconst initialState = {\r\n    user: { name: null, email: null },\r\n    token: null,\r\n    isLoggedIn: false,\r\n    isFetchingCurrentUser: false,\r\n    error: null,\r\n    isLoading: false,\r\n   isNotification: {},\r\n};\r\n\r\nconst authSlice = createSlice({\r\n    name: 'auth',\r\n    initialState,\r\n    extraReducers: {\r\n        [authOperations.register.fulfilled](state, action) {\r\n            state.user = action.payload.user;\r\n            state.token = action.payload.token;\r\n            state.isLoading = false;\r\n            state.isLoggedIn = true;\r\n            state.isNotification = {\r\n                status: 'success',\r\n                message: 'Success registered!'\r\n            }\r\n        },\r\n        [authOperations.register.rejected](state, action) {\r\n            state.isLoggedIn = false;\r\n            state.isNotification = {\r\n                  status: 'error',\r\n                message: 'Error registered! Try again!'\r\n            }\r\n        },\r\n        [authOperations.logIn.fulfilled](state, action) {\r\n            state.user = action.payload.user;\r\n            state.token = action.payload.token;\r\n            state.isLoggedIn = true;\r\n            state.isNotification = {\r\n                status: 'success',\r\n                message: 'Success authorization!'\r\n            }\r\n        },\r\n          [authOperations.logIn.rejected](state, action) {\r\n            state.isLoggedIn = false;\r\n            state.isNotification = {\r\n                status: 'error',\r\n                message: 'Error! Try again!'\r\n            }\r\n        },\r\n        [authOperations.logOut.fulfilled](state, action) {\r\n            state.user = { name: null, email: null };\r\n            state.token = null;\r\n            state.isLoggedIn = false;\r\n            state.isNotification = {\r\n                status: 'success',\r\n                message: 'Success logout!'\r\n            };\r\n        },\r\n        [authOperations.fetchCurrentUser.pending](state) {\r\n            state.isFetchingCurrentUser = true;\r\n        },\r\n        [authOperations.fetchCurrentUser.fulfilled](state, action) {\r\n            state.user = action.payload;\r\n            state.isLoggedIn = true;\r\n            state.isFetchingCurrentUser = false;\r\n        },\r\n        [authOperations.fetchCurrentUser.rejected](state, action) {\r\n            state.isFetchingCurrentUser = false;\r\n            state.error = action.payload;\r\n        },\r\n    },\r\n});\r\n\r\nexport default authSlice.reducer;","const getIsLoggedIn = state => state.auth.isLoggedIn;\r\n\r\nconst getUserName = state => state.auth.user.name;\r\n\r\nconst getIsFetchingCurrent = state => state.auth.isFetchingCurrentUser;\r\n\r\nconst getIsNotification = state => state.auth.isNotification;\r\n\r\n\r\nconst authSelectors = {\r\n    getIsLoggedIn,\r\n    getUserName,\r\n    getIsFetchingCurrent,\r\n    getIsNotification,\r\n};\r\n\r\nexport default authSelectors;","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport { authSelectors } from '../../redux/auth';\r\nimport s from \"./AppBar.module.css\";\r\n\r\n\r\nconst Navigation = () => {\r\n    const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\r\n    return (\r\n        <nav>\r\n            <NavLink\r\n                to=\"/\"\r\n                className={s.link}\r\n                style={({ isActive }) => ({\r\n                    color: isActive ? ' rgba(255, 27, 0, 1)' : 'black',\r\n                })}>\r\n                Home\r\n            </NavLink>\r\n\r\n            {isLoggedIn && (\r\n                 <NavLink\r\n                to=\"/contacts\"\r\n                className={s.link}\r\n                style={({ isActive }) => ({\r\n                    color: isActive ? ' rgba(255, 27, 0, 1)' : 'black',\r\n                })}>\r\n                Contacts\r\n            </NavLink>\r\n           )}\r\n        \r\n        </nav>\r\n    )\r\n};\r\n\r\nexport default Navigation;","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport s from \"./AppBar.module.css\";\r\n\r\n\r\n\r\nexport default function AuthNav() {\r\n\r\n  return (\r\n    <div className={s.container}>\r\n      <NavLink\r\n        to=\"/register\"\r\n        className={s.link}\r\n        style={({ isActive }) => ({\r\n          color: isActive ? ' rgba(255, 27, 0, 1)' : 'black',\r\n        })}>\r\n        Registration\r\n      </NavLink>\r\n          \r\n          \r\n      <NavLink\r\n        to=\"/login\"\r\n        className={s.link}\r\n        style={({ isActive }) => ({\r\n          color: isActive ? ' rgba(255, 27, 0, 1)' : 'black',\r\n        })}>\r\n        Login\r\n      </NavLink>\r\n    </div>\r\n  );\r\n};","export default __webpack_public_path__ + \"static/media/default-avatar.ca686d4a.png\";","import { useDispatch, useSelector } from \"react-redux\";\r\nimport { authSelectors,authOperations } from \"../../redux/auth\";\r\nimport defaultAvatar from './default-avatar.png';\r\nimport s from \"./UserMenu.module.css\";\r\n\r\nexport default function UserMenu() {\r\n    const dispatch = useDispatch();\r\n    const name = useSelector(authSelectors.getUserName);\r\n    const avatar = defaultAvatar;\r\n\r\n  return (\r\n    <div className={s.container}>\r\n      <img src={avatar} alt=\"\" width=\"32\" className={s.avatar} />\r\n      <h3 className={s.name}>\r\n        Welcome\r\n        <span>{name}</span>\r\n      </h3>\r\n       <div  className=\"frame\">\r\n        <div className={s.btnList} >\r\n          <button\r\n            type=\"button\"\r\n            onClick={() => dispatch(authOperations.logOut())}\r\n            className={s.btn12}>\r\n            <span> Log out</span>\r\n            <span> Log out</span>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    \r\n    </div>\r\n  );\r\n};","import { useSelector } from \"react-redux\";\r\nimport Navigation from \"./Navigation\";\r\nimport AuthNav from \"./AuthNav\";\r\nimport UserMenu from \"../UserMenu/UserMenu\";\r\nimport { authSelectors } from \"../../redux/auth\";\r\nimport s from \"./AppBar.module.css\";\r\n\r\n\r\nfunction AppBar() {\r\n    const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\r\n    \r\n    return (\r\n        <header className={s.container}>\r\n            <Navigation />\r\n            {isLoggedIn ? <UserMenu /> : <AuthNav />}\r\n        </header>\r\n    );\r\n};\r\n\r\nexport default AppBar;","import { useSelector } from \"react-redux\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport { authSelectors } from \"../redux/auth\";\r\n\r\n\r\nfunction PrivateRoute({\r\n    children,\r\n    redirectTo = '/login',\r\n}) {\r\n    const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\r\n    return isLoggedIn ? children : <Navigate to={redirectTo}/>\r\n};\r\n\r\nexport default PrivateRoute;","import { useSelector } from \"react-redux\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport { authSelectors } from \"../redux/auth\";\r\n\r\n\r\nfunction PublicRoute({\r\n    children,\r\n    restricted = false,\r\n    redirectTo = '/',\r\n})\r\n{\r\n     const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\r\n     const shouldRedirect = isLoggedIn && restricted;\r\n     return shouldRedirect ? <Navigate to={redirectTo} /> : children;\r\n};\r\n\r\nexport default PublicRoute;\r\n","export default function Loader() {\r\n    return (\r\n      <div className=\"text-center\">\r\n            <div className=\"spinner-border text-primary \" size=\"l\"  role=\"status\">\r\n  <span className=\"sr-only\"></span>\r\n            </div>\r\n</div>\r\n    )\r\n};","import s from \"./Container.module.css\";\r\n\r\nfunction ContainerHeader({ title, children }) {\r\n  return (\r\n    <div className={s.ContainerHeader}>\r\n      <h2 className={s.title}>{title}</h2>\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ContainerHeader;\r\n","import { lazy, Suspense, useEffect } from \"react\";\nimport { useDispatch,useSelector } from \"react-redux\";\nimport \"./App.css\";\nimport AppBar from \"./components/AppBar/AppBar\";\nimport { authOperations, authSelectors } from \"./redux/auth\";\nimport { Route,Routes } from 'react-router-dom'; \nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport PrivateRoute from \"./routes/PrivateRoute\";\nimport PublicRoute from \"./routes/PublicRoute\";\nimport Loader from \"./components/Loader/Loader\";\nimport ContainerHeader from \"./components/Container/ContainerHeader\";\nimport { ToastContainer} from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { NotificationError, NotificationSuccess } from \"./components/Notification/Notification\";\n  \nconst HomePage = lazy(() => import('./pages/HomePage'));\nconst RegisterPage = lazy(() => import('./pages/RegisterPage'));\nconst LoginPage = lazy(() => import('./pages/LoginPage'));\nconst ContactsPage = lazy(() => import('./pages/ContactsPage'));\n\nfunction App() {\n  const dispatch = useDispatch();\n  const isFetchingCurrentUser = useSelector(authSelectors.getIsFetchingCurrent);\n  const notification = useSelector(authSelectors.getIsNotification);\n  \n  useEffect(() => {\n    const { status, message } = notification;\n\n    switch (status) {\n      case 'error':\n        return NotificationError(message);\n      case 'success':\n        return NotificationSuccess(message);\n    \n      default:\n        return;\n    };\n  },[notification]);\n\n  useEffect(() => {\n    dispatch(authOperations.fetchCurrentUser());\n  }, [dispatch]);\n \n  return (\n    \n    !isFetchingCurrentUser && (\n       <>\n      <ContainerHeader>\n        <AppBar />\n      </ContainerHeader >\n      <Suspense fallback={<Loader/>}>\n        \n          <Routes>\n            <Route path=\"/\" element={\n              <PublicRoute >\n              <HomePage />\n            </PublicRoute>} />\n            \n            <Route path=\"/register\" element={\n              <PublicRoute restricted  redirectTo='/'>\n                <RegisterPage />\n              </PublicRoute>} />\n            \n            <Route path=\"/login\" element={\n              <PublicRoute restricted redirectTo='/contacts'>\n                <LoginPage />\n                </PublicRoute>} />\n              \n           \n            <Route path=\"/contacts\" element={\n                <PrivateRoute >         \n                <ContactsPage />            \n              </PrivateRoute>} />           \n          </Routes>  \n       <ToastContainer />\n      </Suspense>\n    </>\n   )\n  );\n};\n\nexport default App;\n\n","import { toast } from 'react-toastify';\r\n\r\nexport function NotificationSuccess(message) {\r\n    return toast.success(`${message}`);\r\n}\r\n\r\nexport function NotificationError(message) {\r\n    return toast.error(`${message}`);\r\n}","import { combineReducers } from \"redux\";\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport actions from './contacts-actions';\r\n\r\nconst {\r\n    getContactsSuccess,\r\n    addContactsSuccess,\r\n    deleteContactsSuccess,\r\n    changeContact,\r\n} = actions;\r\n\r\nexport const items = createReducer([], {\r\n    [getContactsSuccess]: (_, { payload }) => payload,\r\n    [addContactsSuccess]: (state, { payload }) => [...state, payload],\r\n    [deleteContactsSuccess]: (state, { payload }) => state.filter((contact) => contact.id !== payload),\r\n});\r\n\r\nconst filter = createReducer(\"\", {\r\n    \r\n    [changeContact]: (_, { payload }) => payload,\r\n});\r\n\r\nconst error = createReducer(null, {});\r\n\r\nexport default combineReducers({\r\n    items,\r\n    filter,\r\n    error,\r\n});","import { configureStore,getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport logger from 'redux-logger';\r\nimport rootReducer from \"./contacts/contacts-reducer\";\r\nimport {\r\n  persistReducer,\r\n    persistStore,\r\n    FLUSH,\r\n    REHYDRATE,\r\n    PAUSE,\r\n    PERSIST,\r\n    PURGE,\r\n    REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport { authReducer } from \"./auth\";\r\n\r\nconst middleware = [\r\n    ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n    }),\r\n  logger,\r\n];\r\n\r\nconst authPersistConfig = {\r\n  key: 'auth',\r\n  storage,\r\n  whitelist: ['token'],\r\n};\r\n\r\n export const store = configureStore({\r\n   reducer: {\r\n     auth: persistReducer(authPersistConfig, authReducer),\r\n     contacts: rootReducer,\r\n\r\n    },\r\n    middleware,\r\n    devTools: process.env.NODE_ENV === 'development',\r\n });\r\n\r\n \r\nexport const persistor = persistStore(store);\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { store,persistor} from './redux/store';\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from 'redux-persist/integration/react';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <BrowserRouter>\n        <App />\n        </BrowserRouter>\n        </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}